{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/Header.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/pages/About.js","components/pages/NotFound.js","components/pages/Test/test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","res","this","data","value","props","children","Component","Consumer","Contact","showContactInfo","onShowClick","e","onDeleteClick","delete","then","className","name","onClick","style","cursor","float","color","bind","to","marginRight","email","phone","Contacts","key","Header","href","branding","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","defaultProp","AddContact","errors","target","onSubmit","preventDefault","newContact","uuidv4","post","history","push","EditContact","updateContact","put","match","params","About","NotFound","test","title","body","fetch","response","json","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.98170165.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Context = React.createContext();\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"DELETE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          (contact) => contact.id !== action.payload\r\n        ),\r\n      };\r\n    case \"ADD_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts],\r\n      };\r\n    case \"UPDATE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map((contact) =>\r\n          contact.id === action.payload.id\r\n            ? (contact = action.payload)\r\n            : contact\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    contacts: [],\r\n    dispatch: (action) => {\r\n      this.setState((state) => reducer(state, action));\r\n    },\r\n  };\r\n  async componentDidMount() {\r\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\r\n    this.setState({ contacts: res.data });\r\n  }\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Consumer } from \"../../context\";\r\nimport axios from \"axios\";\r\n\r\nclass Contact extends Component {\r\n  static propTypes = {\r\n    contact: PropTypes.object.isRequired,\r\n  };\r\n  state = {\r\n    showContactInfo: true,\r\n  };\r\n  onShowClick = (e) => {\r\n    this.setState({ showContactInfo: !this.state.showContactInfo });\r\n  };\r\n  onDeleteClick = (id, dispatch) => {\r\n    axios\r\n      .delete(`https://jsonplaceholder.typicode.com/users/${id}`)\r\n      .then((res) => dispatch({ type: \"DELETE_CONTACT\", payload: id }));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          return (\r\n            <div className=\"card card-body mb-3\">\r\n              <h4>\r\n                {this.props.contact.name}{\" \"}\r\n                <i\r\n                  onClick={this.onShowClick}\r\n                  className=\"fas fa-sort-down\"\r\n                  style={{ cursor: \"pointer\" }}\r\n                />\r\n                <i\r\n                  className=\"fas fa-times\"\r\n                  style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\r\n                  onClick={this.onDeleteClick.bind(\r\n                    this,\r\n                    this.props.contact.id,\r\n                    value.dispatch\r\n                  )}\r\n                ></i>\r\n                <Link to={`contact/edit/${this.props.contact.id}`}>\r\n                  <i\r\n                    style={{\r\n                      cursor: \"pointer\",\r\n                      float: \"right\",\r\n                      color: \"black\",\r\n                      marginRight: \"1rem\",\r\n                    }}\r\n                    className=\"fas fa-pencil-alt\"\r\n                  ></i>\r\n                </Link>\r\n              </h4>\r\n              {this.state.showContactInfo ? (\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">\r\n                    Email: {this.props.contact.email}\r\n                  </li>\r\n                  <li className=\"list-group-item\">\r\n                    Phone: {this.props.contact.phone}\r\n                  </li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contact;\r\n","import React, { Component } from \"react\";\r\nimport Contact from \"../contacts/Contact\";\r\nimport { Consumer } from \"../../context\";\r\n\r\nclass Contacts extends Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          return (\r\n            <div>\r\n              <h1 className=\"display-4 mb-2\">\r\n                <span className=\"text-danger\">Contact</span> List\r\n              </h1>\r\n              {value.contacts.map((contact) => (\r\n                <Contact key={contact.id} contact={contact} />\r\n              ))}{\" \"}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction Header(props) {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n      <div className=\"container\">\r\n        <a href=\"/\" className=\"navbar-brand\">\r\n          {props.branding}\r\n        </a>\r\n        <div>\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-link\">\r\n                <i className=\"fas fa-home\"></i> Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/contact/add\" className=\"nav-link\">\r\n                <i className=\"fas fa-plus\"></i>Add\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/about\" className=\"nav-link\">\r\n                <i className=\"fas fa-question\"></i>About\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\nHeader.propTypes = { branding: PropTypes.string.isRequired };\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\n\r\nfunction TextInputGroup({\r\n  label,\r\n  name,\r\n  value,\r\n  placeholder,\r\n  type,\r\n  onChange,\r\n  error,\r\n}) {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        type={type}\r\n        name={name}\r\n        className={classnames(\"form-control form-control-lg\", {\r\n          \"is-invalid\": error,\r\n        })}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n}\r\n\r\nTextInputGroup.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\nTextInputGroup.defaultProp = {\r\n  type: \"text\",\r\n};\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Consumer } from \"../../context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport axios from \"axios\";\r\n\r\nclass AddContact extends Component {\r\n  static propTypes = {};\r\n\r\n  state = { name: \"\", email: \"\", phone: \"\", errors: {} };\r\n  onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n  onSubmit = (dispatch, e) => {\r\n    e.preventDefault();\r\n    // Check for Errors\r\n    if (this.state.name === \"\") {\r\n      this.setState({ errors: { name: \"Name is Required\" } });\r\n      return;\r\n    }\r\n    if (this.state.email === \"\") {\r\n      this.setState({ errors: { email: \"Email is Required\" } });\r\n      return;\r\n    }\r\n    if (this.state.phone === \"\") {\r\n      this.setState({ errors: { phone: \"Phone is Required\" } });\r\n      return;\r\n    }\r\n    const newContact = {\r\n      id: uuidv4(),\r\n      name: this.state.name,\r\n      email: this.state.email,\r\n      phone: this.state.phone,\r\n    };\r\n    axios\r\n      .post(\"https://jsonplaceholder.typicode.com/users\", newContact)\r\n      .then((res) => dispatch({ type: \"ADD_CONTACT\", payload: res.data }));\r\n\r\n    // clear state\r\n    this.setState({ name: \"\", email: \"\", phone: \"\", errors: {} });\r\n    // Redirect...\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Add Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, value.dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    type=\"name\"\r\n                    placeholder=\"Enter Name...\"\r\n                    value={this.state.name}\r\n                    onChange={this.onChange}\r\n                    error={this.state.errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Enter Email...\"\r\n                    value={this.state.email}\r\n                    onChange={this.onChange}\r\n                    error={this.state.errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    type=\"text\"\r\n                    placeholder=\"Enter Phone...\"\r\n                    value={this.state.phone}\r\n                    onChange={this.onChange}\r\n                    error={this.state.errors.phone}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Add Contact\"\r\n                    className=\"btn btn-light btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContact;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Consumer } from \"../../context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport axios from \"axios\";\r\n\r\nclass EditContact extends Component {\r\n  static propTypes = {};\r\n\r\n  state = { name: \"\", email: \"\", phone: \"\", errors: {} };\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(\r\n        `https://jsonplaceholder.typicode.com/users/${this.props.match.params.id}`\r\n      )\r\n      .then((res) =>\r\n        this.setState({\r\n          name: res.data.name,\r\n          email: res.data.email,\r\n          phone: res.data.phone,\r\n        })\r\n      );\r\n  }\r\n\r\n  onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n  onSubmit = (dispatch, e) => {\r\n    e.preventDefault();\r\n    // Check for Errors\r\n    if (this.state.name === \"\") {\r\n      this.setState({ errors: { name: \"Name is Required\" } });\r\n      return;\r\n    }\r\n    if (this.state.email === \"\") {\r\n      this.setState({ errors: { email: \"Email is Required\" } });\r\n      return;\r\n    }\r\n    if (this.state.phone === \"\") {\r\n      this.setState({ errors: { phone: \"Phone is Required\" } });\r\n      return;\r\n    }\r\n\r\n    const updateContact = {\r\n      name: this.state.name,\r\n      email: this.state.email,\r\n      phone: this.state.phone,\r\n    };\r\n    axios\r\n      .put(\r\n        `https://jsonplaceholder.typicode.com/users/${this.props.match.params.id}`,\r\n        updateContact\r\n      )\r\n      .then((res) => dispatch({ type: \"UPDATE_CONTACT\", payload: res.data }));\r\n\r\n    // clear state\r\n    this.setState({ name: \"\", email: \"\", phone: \"\", errors: {} });\r\n    // Redirect...\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Edit Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, value.dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    type=\"name\"\r\n                    placeholder=\"Enter Name...\"\r\n                    value={this.state.name}\r\n                    onChange={this.onChange}\r\n                    error={this.state.errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Enter Email...\"\r\n                    value={this.state.email}\r\n                    onChange={this.onChange}\r\n                    error={this.state.errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    type=\"text\"\r\n                    placeholder=\"Enter Phone...\"\r\n                    value={this.state.phone}\r\n                    onChange={this.onChange}\r\n                    error={this.state.errors.phone}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Update Contact\"\r\n                    className=\"btn btn-light btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditContact;\r\n","import React from \"react\";\r\n\r\nfunction About() {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">About Contact Manager</h1>\r\n      <p className=\"lead\">Simple App To Manage Contacts</p>\r\n      <p className=\"text-secondary\">Version 1.0.0</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;\r\n","import React from \"react\";\r\n\r\nfunction NotFound() {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">\r\n        <span className=\"text-danger\">404</span> Page Not Found\r\n      </h1>\r\n      <p className=\"lead\">Sorry, that Page Does Not Exist</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NotFound;\r\n","import React, { Component } from \"react\";\r\n\r\nclass test extends Component {\r\n  state = {\r\n    title: \"\",\r\n    body: \"\",\r\n  };\r\n  componentDidMount() {\r\n    fetch(\"https://jsonplaceholder.typicode.com/todos/1\")\r\n      .then((response) => response.json())\r\n      .then((data) => this.setState({ title: data.title, body: data.body }));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>{this.state.title}</h1>\r\n        <p>{this.state.body}</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default test;\r\n","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport Header from \"./components/layout/Header\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport EditContact from \"./components/contacts/EditContact\";\nimport About from \"./components/pages/About\";\nimport NotFound from \"./components/pages/NotFound\";\nimport test from \"./components/pages/Test/test\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Provider } from \"./context\";\n\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <Provider>\n      <Router>\n        <div className=\"App\">\n          <Header branding=\"Contact Manager\" />\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={Contacts} />\n              <Route exact path=\"/contact/add\" component={AddContact} />\n              <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n              <Route exact path=\"/about\" component={About} />\n              <Route exact path=\"/test\" component={test} />\n              <Route component={NotFound} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}